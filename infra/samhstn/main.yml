AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31

Description: >
  + Creates and stores secrets
  + Sets up a lambda webhook for dynamic builds
  + Creates ECR repo
  + Creates codepipeline

Parameters:
  GithubPAToken:
    Type: String
    NoEcho: true
  SecretKeyBase:
    Type: String
    NoEcho: true
  GithubMasterBranch:
    Type: String
    Default: master
  Route53RoleArn:
    Type: String
    Default: ''
    Description: To be updated once role has been created in root account.
  SamhstnHostedZoneId:
    Type: String
  GlobalCertificate:
    Type: String

Conditions:
  IsRoute53RoleSet: !Not [ !Equals [!Ref Route53RoleArn, '']]

Resources:
  GithubSecretParameter:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: /GithubSecret
      GenerateSecretString:
        ExcludePunctuation: true

  GithubPATokenParameter:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: /GithubPAToken
      SecretString: !Ref GithubPAToken

  SecretKeyBaseParameter:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: /SecretKeyBase
      SecretString: !Ref SecretKeyBase

  WebhookLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/lambda/Webhook
      RetentionInDays: 14

  BuildProjectLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/codebuild/BuildProject
      RetentionInDays: 14

  DeleteProjectLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/codebuild/DeleteProject
      RetentionInDays: 14

  MasterPipelineLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/codebuild/MasterProject
      RetentionInDays: 14

  WebhookFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - GithubSecretParameter
      - WebhookLogGroup
    Properties:
      FunctionName: Webhook
      Runtime: python3.8
      Role: !GetAtt WebhookRole.Arn
      Handler: index.handler
      Environment:
        Variables:
          GITHUB_MASTER_BRANCH: !Ref GithubMasterBranch
          BUILD_PROJECT: !Ref BuildDynamicProject
          DELETE_PROJECT: !Ref DeleteDynamicProject
      CodeUri: webhook
      Events:
        Webhook:
          Type: HttpApi
          Properties:
            Method: POST
            Path: /webhook

  WebhookRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ExecuteWebhook-${AWS::Region}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Policies:
        - PolicyName: execute-webhook
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: codepipeline:StartPipelineExecution
                Resource: !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${MasterPipeline}
              - Effect: Allow
                Action: codebuild:StartBuild
                Resource:
                  - !GetAtt BuildDynamicProject.Arn
                  - !GetAtt DeleteDynamicProject.Arn
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !GetAtt WebhookLogGroup.Arn
              - Effect: Allow
                Action: secretsmanager:GetSecretValue
                Resource: !Ref GithubSecretParameter
              - Effect: Allow
                Action: sts:AssumeRole
                Resource: !Sub arn:aws:iam::${AWS::AccountId}:role/ExecuteWebhook

  MasterPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: master
      ArtifactStore:
        Location: !ImportValue CodePipelineBucketName
        Type: S3
      RoleArn: !GetAtt DeploymentRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              OutputArtifacts:
                - Name: Source
              Configuration:
                Owner: samhstn
                Repo: samhstn
                Branch: !Ref GithubMasterBranch
                OAuthToken: !Ref GithubPAToken
                PollForSourceChanges: false
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              InputArtifacts:
                - Name: Source
              OutputArtifacts:
                - Name: Build
              Configuration:
                ProjectName: !Ref MasterBuildProject
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: Deploy
              InputArtifacts:
                - Name: Build
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CodeDeploy
              Configuration:
                ApplicationName: !Ref DeploymentApplication
                DeploymentGroupName: !Ref DeploymentGroup
              RunOrder: 1

  MasterBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: MasterProject
      ServiceRole: !GetAtt DeploymentRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image:  !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/samhstn:latest
        EnvironmentVariables:
          - Name: MASTER_BUILD_CACHE_BUCKET_NAME
            Value: !ImportValue MasterBuildCacheS3BucketName
      Source:
        Type: CODEPIPELINE
        BuildSpec: infra/samhstn/masterspec.yml

  DeploymentApplication:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: master
      ComputePlatform: Server

  DeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    Properties:
      DeploymentGroupName: master
      AutoScalingGroups:
        - !GetAtt Master.Outputs.ScalingGroup
      ApplicationName: !Ref DeploymentApplication
      DeploymentConfigName: CodeDeployDefault.AllAtOnce
      ServiceRoleArn: !GetAtt DeploymentRole.Arn

  Master:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: deploy.yml
      TimeoutInMinutes: 30
      Parameters:
        Environment: prod
        CodeBuildBucketKey: ''

  BuildDynamicProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: BuildProject
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/samhstn:latest
        EnvironmentVariables:
          - Name: S3_CODEBUILD_BUCKET_NAME
            Value: !ImportValue CodeBuildBucketName
          - Name: ROUTE_53_ROLE_ARN
            Value: !Ref Route53RoleArn
          - Name: SAMHSTN_HOSTED_ZONE_ID
            Value: !Ref SamhstnHostedZoneId
          - Name: MASTER_BUILD_CACHE_BUCKET_NAME
            Value: !ImportValue MasterBuildCacheS3BucketName
      ServiceRole: !Ref DeploymentRole
      Source:
        Type: GITHUB
        Auth:
          Type: OAUTH
        Location: https://github.com/samhstn/samhstn.git
        BuildSpec: infra/samhstn/buildspec.yml
        ReportBuildStatus: true

  DeleteDynamicProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: DeleteProject
      Artifacts:
        Type: NO_ARTIFACTS
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/samhstn:latest
        EnvironmentVariables:
          - Name: SAMHSTN_HOSTED_ZONE_ID
            Value: !Ref SamhstnHostedZoneId
          - Name: ROUTE_53_ROLE_ARN
            Value: !Ref Route53RoleArn
      ServiceRole: !Ref DeploymentRole
      Source:
        Type: GITHUB
        Auth:
          Type: OAUTH
        Location: https://github.com/samhstn/samhstn.git
        BuildSpec: infra/samhstn/deletespec.yml

  DeploymentRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub DeploymentRole-${AWS::Region}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Principal:
            Service:
               - codepipeline.amazonaws.com
               - codedeploy.amazonaws.com
               - codebuild.amazonaws.com
          Action: sts:AssumeRole
      Policies:
        - PolicyName: DeploymentPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !GetAtt BuildProjectLogGroup.Arn
                  - !GetAtt DeleteProjectLogGroup.Arn
                  - !GetAtt MasterPipelineLogGroup.Arn
              - Effect: Allow
                Action:
                  - ssm:GetParameters
                  - 'cloudformation:*'
                  - 'iam:*'
                  - 'ec2:*'
                  - 'codedeploy:*'
                  - 'autoscaling:*'
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                  - elasticloadbalancing:DescribeListeners
                  - elasticloadbalancing:CreateLoadBalancer
                  - elasticloadbalancing:CreateListener
                  - elasticloadbalancing:DescribeLoadBalancers
                  - elasticloadbalancing:DescribeTargetGroups
                  - elasticloadbalancing:CreateTargetGroup
                  - elasticloadbalancing:DeleteTargetGroup
                  - elasticloadbalancing:DeleteLoadBalancer
                  - elasticloadbalancing:DeleteListener
                  - elasticloadbalancing:AddTags
                Resource: '*'
              - Effect: Allow
                Action: 's3:*'
                Resource:
                  - !Sub
                    - arn:aws:s3:::${CodeBuildBucketName}
                    - {CodeBuildBucketName: !ImportValue CodeBuildBucketName}
                  - !Sub
                    - arn:aws:s3:::${CodeBuildBucketName}/*
                    - {CodeBuildBucketName: !ImportValue CodeBuildBucketName}
                  - !Sub
                    - arn:aws:s3:::${CodePipelineBucketName}
                    - {CodePipelineBucketName: !ImportValue CodePipelineBucketName}
                  - !Sub
                    - arn:aws:s3:::${CodePipelineBucketName}/*
                    - {CodePipelineBucketName: !ImportValue CodePipelineBucketName}
                  - !Sub
                    - arn:aws:s3:::${MasterBuildCacheS3BucketName}
                    - {MasterBuildCacheS3BucketName: !ImportValue MasterBuildCacheS3BucketName}
                  - !Sub
                    - arn:aws:s3:::${MasterBuildCacheS3BucketName}/*
                    - {MasterBuildCacheS3BucketName: !ImportValue MasterBuildCacheS3BucketName}
              - !If
                - IsRoute53RoleSet
                - Resource: !Ref Route53RoleArn
                  Effect: Allow
                  Action:
                    - sts:AssumeRole
                - !Ref AWS::NoValue

  CloudFront:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Aliases:
          - samhstn.com
        CacheBehaviors:
          - DefaultTTL: 31622400
            MaxTTL: 31622400
            MinTTL: 31622400
            PathPattern: '/static/*'
            ForwardedValues:
              QueryString: false
              Headers:
                - Host
            CachedMethods:
              - GET
              - HEAD
            AllowedMethods:
              - GET
              - HEAD
            ViewerProtocolPolicy: allow-all
            Compress: true
            TargetOriginId: LoadBalancerOrigin
        Origins:
          - DomainName: !GetAtt Master.Outputs.LoadBalancerDNSName
            Id: LoadBalancerOrigin
            CustomOriginConfig:
              OriginProtocolPolicy: https-only
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
            - PUT
            - PATCH
            - POST
            - DELETE
          ForwardedValues:
            QueryString: true
            Headers:
              - Host
            Cookies:
              Forward: all
          Compress: true
          ViewerProtocolPolicy: redirect-to-https
          TargetOriginId: LoadBalancerOrigin
        Enabled: true
        PriceClass: PriceClass_All
        ViewerCertificate:
          AcmCertificateArn: !Ref GlobalCertificate
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.1_2016

Outputs:
  WebhookEndpoint:
    Value: !Sub https://${ServerlessHttpApi}.execute-api.${AWS::Region}.amazonaws.com/webhook
    Export:
      Name: WebhookEndpoint
  DeploymentRoleArn:
    Value: !GetAtt DeploymentRole.Arn
    Export:
      Name: DeploymentRoleArn
  CloudFrontDomainName:
    Value: !GetAtt CloudFront.DomainName
  SecretKeyBaseParameterArn:
    Value: !Ref SecretKeyBaseParameter
    Export:
      Name: SecretKeyBaseParameterArn
