AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31

Description: >
  + Creates and stores secrets
  + Sets up a lambda webhook for dynamic builds

Parameters:
  GithubPAToken:
    Type: String
    NoEcho: true

  GithubMasterBranch:
    Type: String
    Default: master

Resources:
  GithubSecretParameter:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: /GithubSecret
      GenerateSecretString:
        ExcludePunctuation: true

  GithubPATokenParameter:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: /GithubPAToken
      SecretString: !Ref GithubPAToken

  WebhookLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/lambda/Webhook
      RetentionInDays: 14

  WebhookFunction:
    Type: AWS::Serverless::Function
    DependsOn:
      - GithubSecretParameter
      - WebhookLogGroup
    Properties:
      FunctionName: Webhook
      Runtime: python3.8
      Role: !GetAtt WebhookRole.Arn
      Handler: webhook.handler
      Environment:
        Variables:
          GITHUB_MASTER_BRANCH: !Ref GithubMasterBranch
      CodeUri: ../webhook/function
      Events:
        Webhook:
          Type: HttpApi
          Properties:
            Method: POST
            Path: /webhook

  WebhookRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ExecuteWebhook
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Policies:
        - PolicyName: execute-webhook
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !GetAtt WebhookLogGroup.Arn
              - Effect: Allow
                Action: secretsmanager:GetSecretValue
                Resource: !Ref GithubSecretParameter
              - Effect: Allow
                Action: sts:AssumeRole
                Resource: !Sub arn:aws:iam::${AWS::AccountId}:role/ExecuteWebhook

Outputs:
  WebhookEndpoint:
    Value: !Sub https://${ServerlessHttpApi}.execute-api.${AWS::Region}.amazonaws.com/webhook
    Export:
      Name: WebhookEndpoint
