version: 0.2

phases:
  install:
    commands:
      - mix deps.get
  pre_build:
    commands:
      - MIX_ENV=test mix compile
      - mix test
  build:
    commands:
      - mix phx.digest
      - MIX_ENV=prod mix release
      - echo $S3_CODEBUILD_BUCKET_NAME
      - zip -r ${CODEBUILD_RESOLVED_SOURCE_VERSION}.zip priv
      - zip -qr ${CODEBUILD_RESOLVED_SOURCE_VERSION}.zip _build/prod/rel/samhstn
      - zip -j ${CODEBUILD_RESOLVED_SOURCE_VERSION}.zip
          infra/samhstn/appspec.yml
          infra/samhstn/start-service.sh
          infra/samhstn/stop-service.sh
      - aws s3 cp ${CODEBUILD_RESOLVED_SOURCE_VERSION}.zip
          s3://${S3_CODEBUILD_BUCKET_NAME}/${ISSUE_NUMBER}/${CODEBUILD_RESOLVED_SOURCE_VERSION}
  post_build:
    commands:
      - aws cloudformation deploy
          --stack-name "samhstn-${ISSUE_NUMBER}-vpc"
          --template-file infra/samhstn/vpc.yml
          --no-fail-on-empty-changeset
          # - aws cloudformation deploy
          #     --stack-name "samhstn-${ISSUE_NUMBER}-nat-gateway"
          #     --template-file infra/samhstn/nat-gateway.yml
          #     --no-fail-on-empty-changeset
          #     --parameter-overrides
          #       

          # - |
          #   if ! VPC_STACK_STATUS=$(aws cloudformation describe-stacks --stack-name "samhstn-${ISSUE_NUMBER}-vpc"); then
          #     aws cloudformation create-stack \
          #       --stack-name "samhstn-${ISSUE_NUMBER}-vpc" \
          #       --template-body file://infra/samhstn/vpc.yml
          #   fi

          #   aws cloudformation wait stack-create-complete --stack-name "samhstn-${ISSUE_NUMBER}-vpc"

          #   if aws cloudformation describe-stacks --stack-name "samhstn-${ISSUE_NUMBER}" &>/dev/null; then
          #     UPDATE_ERR=$(aws cloudformation update-stack \
          #       --stack-name "samhstn-${ISSUE_NUMBER}" \
          #       --template-body file://infra/samhstn/dynamic-build.yml \
          #       --parameters \
          #         ParameterKey=GithubBranch,ParameterValue=${CODEBUILD_SOURCE_VERSION} \
          #         ParameterKey=CodeBuildBucketKey,ParameterValue=${ISSUE_NUMBER}/${CODEBUILD_RESOLVED_SOURCE_VERSION} \
          #         $(aws cloudformation describe-stacks \
          #           --stack-name "samhstn-${ISSUE_NUMBER}-vpc" \
          #           --query "Stacks[0].Outputs[*].[join(',', [join('=',['ParameterKey', OutputKey]), join('=',['ParameterValue', OutputValue])])] | join(' ', [])" \
          #           --output text) \
          #       --capabilities CAPABILITY_IAM 2>&1)
          #     if [ $? -eq 0 ]; then
          #       aws cloudformation wait stack-update-complete \
          #         --stack-name "samhstn-${ISSUE_NUMBER}"
          #     elif [[ $UPDATE_ERR =~ "No updates are to be performed" ]]; then
          #       echo "No updates are to be performed"
          #     else
          #       echo "UPDATE_ERR: $UPDATE_ERR"
          #       exit 1
          #     fi
          #   else
          #     aws cloudformation create-stack \
          #       --stack-name "samhstn-${ISSUE_NUMBER}" \
          #       --template-body file://infra/samhstn/dynamic-build.yml \
          #       --parameters \
          #         ParameterKey=GithubBranch,ParameterValue=${CODEBUILD_SOURCE_VERSION} \
          #         ParameterKey=CodeBuildBucketKey,ParameterValue=${ISSUE_NUMBER}/${CODEBUILD_RESOLVED_SOURCE_VERSION} \
          #         $(aws cloudformation describe-stacks \
          #           --stack-name "samhstn-${ISSUE_NUMBER}-vpc" \
          #           --query "Stacks[0].Outputs[*].[join(',', [join('=',['ParameterKey', OutputKey]), join('=',['ParameterValue', OutputValue])])] | join(' ', [])" \
          #           --output text) \
          #       --capabilities CAPABILITY_IAM
          #     aws cloudformation wait stack-create-complete \
          #       --stack-name "samhstn-${ISSUE_NUMBER}"
          #   fi
