AWSTemplateFormatVersion: 2010-09-09

Parameters:
  NotificationEmail:
    Type: String

  FromEmail:
    Type: String
    Default: noreply@samhstn.com

Resources:
  Route53RecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: samhstn.com
      Type: MX
      HostedZoneName: samhstn.com.
      TTL: 300
      ResourceRecords:
        - !Sub "10 inbound-smtp.${AWS::Region}.amazonaws.com"

  EmailBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: samhstn-emails
      PublicAccessBlockConfiguration:
        RestrictPublicBuckets: true

  EmailBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref EmailBucket
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service:
                ses.amazonaws.com
            Action: s3:PutObject
            Resource: !Sub ${EmailBucket.Arn}/*

  EmailRuleSet:
    Type: AWS::SES::ReceiptRuleSet
    Properties:
      RuleSetName: SamhstnRuleSet

  EmailRule:
    Type: AWS::SES::ReceiptRule
    Properties:
      RuleSetName: !Ref EmailRuleSet
      Rule:
        Name: SamhstnRule
        Enabled: true
        Recipients:
          - samhstn.com
        ScanEnabled: true
        Actions:
          - LambdaAction:
              FunctionArn: !GetAtt Lambda.Arn
          - S3Action:
              BucketName: !Ref EmailBucket
    DependsOn: EmailBucketPolicy

  SESLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: receive_email
      Principal: ses.amazonaws.com
      SourceAccount: !Sub ${AWS::AccountId}
    DependsOn: Lambda

  EmailRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ReceiveEmail
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Policies:
        - PolicyName: receive-email
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: '*'
                Resource: '*'

  EmailTemplate:
    Type: AWS::SES::Template
    Properties:
      Template:
        TemplateName: SamhstnTemplate
        SubjectPart: "@samhstn email from: {{from}}, to: {{to}}, with subject: {{subject}}"
        HtmlPart: |
          <!DOCTYPE html>
          <html>
          <head>
            <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1">
            <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro" rel="stylesheet" type="text/css">
            <style type="text/css">
              @import url(https://fonts.googleapis.com/css?family=Source+Sans+Pro);

              body {
                margin: 0;
                padding: 0;
                -webkit-text-size-adjust: 100%;
                -ms-text-size-adjust: 100%;
              }

              table,
              td {
                border-collapse: collapse;
                mso-table-lspace: 0pt;
                mso-table-rspace: 0pt;
              }

              @media only screen and (max-width:480px) {
                @-ms-viewport { width: 320px; }
                @viewport { width: 320px; }
              }

              @media only screen and (min-width:480px) {
                .mj-column-per-100 {
                  width: 100% !important;
                  max-width: 100%;
                }
              }
            </style>
          </head>

          <body>
            <div style="margin:0px auto;max-width:800px;">
              <table align="center" border="0" cellpadding="0" cellspacing="0" role="presentation" style="width:100%;">
                <tbody>
                  <tr>
                    <td style="direction:ltr;font-size:0px;padding:20px 0;text-align:center;vertical-align:top;">
                      <div class="mj-column-per-100 outlook-group-fix" style="font-size:13px;text-align:left;direction:ltr;display:inline-block;vertical-align:top;width:100%;">
                        <table border="0" cellpadding="0" cellspacing="0" role="presentation" style="vertical-align:top;" width="100%">
                          <tr>
                            <td align="left" style="font-size:0px;padding:10px 25px;word-break:break-word;">
                              <div style="font-family:'Source Sans Pro', sans-serif;font-size:20px;line-height:1;text-align:left;color:#276090;"> We've received an @samhstn.com email: </div>
                            </td>
                          </tr>
                          <tr>
                            <td align="left" style="font-size:0px;padding:10px 25px;word-break:break-word;">
                              <div style="font-family:'Source Sans Pro', sans-serif;font-size:20px;line-height:1;text-align:left;color:#276090;"> > from: {{from}} </div>
                            </td>
                          </tr>
                          <tr>
                            <td align="left" style="font-size:0px;padding:10px 25px;word-break:break-word;">
                              <div style="font-family:'Source Sans Pro', sans-serif;font-size:20px;line-height:1;text-align:left;color:#276090;"> > to: {{to}} </div>
                            </td>
                          </tr>
                          <tr>
                            <td align="left" style="font-size:0px;padding:10px 25px;word-break:break-word;">
                              <div style="font-family:'Source Sans Pro', sans-serif;font-size:20px;line-height:1;text-align:left;color:#276090;"> > subject: {{subject}} </div>
                            </td>
                          </tr>
                          <tr>
                            <td style="font-size:0px;padding:10px 25px;word-break:break-word;">
                              <p style="border-top:solid 1px lightgrey;font-size:1;margin:0px auto;width:100%;"> </p>
                            </td>
                          </tr>
                          <tr>
                            <td align="left" style="font-size:0px;padding:10px 25px;word-break:break-word;">
                              <div style="font-family:'Source Sans Pro', sans-serif;font-size:20px;line-height:1;text-align:left;color:#276090;"> See s3 bucket for email: {{messageId}}</div>
                            </td>
                          </tr>
                        </table>
                      </div>
                    </td>
                  </tr>
                </tbody>
              </table>
            </div>
          </body>
          </html>

  Lambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: receive_email
      Handler: index.handler
      Role: !GetAtt EmailRole.Arn
      Runtime: nodejs8.10
      Environment:
        Variables:
          NOTIFICATION_EMAIL: !Ref NotificationEmail
          FROM_EMAIL: !Ref FromEmail
      Code:
        ZipFile: |
          const AWS = require('aws-sdk');
          const ses = new AWS.SES();

          const notificationEmail = process.env.NOTIFICATION_EMAIL;
          const fromEmail = process.env.FROM_EMAIL;

          exports.handler = (event, context, callback) => {
            try {
              const messageId = event.Records[0].ses.mail.messageId;
              const { from, to, subject } = event.Records[0].ses.mail.commonHeaders;

              const params = {
                Destination: { ToAddresses: [ notificationEmail ] },
                Source: fromEmail,
                Template: 'SamhstnTemplate',
                TemplateData: JSON.stringify({ from: from.join(', '), to: to.join(', '), subject, messageId })
              };

              ses.sendTemplatedEmail(params, (err, data) => {
                if (err) {
                  console.log('EMAIL_SEND_ERROR', err);

                  return;
                }

                console.log('EMAIL_SEND_SUCCESS', data.messageId);
              });

              console.log('FROM ', from.join(', '));
              console.log('TO ', to.join(', '));
              console.log('SUBJECT ', subject);
              console.log('MESSAGE_ID ', messageId);

              callback(null);
            } catch (e) {
              console.log('ERROR ', e);

              callback(true);
            }
          }
